plugins {
    id "io.morethan.jmhreport" version "0.9.0"
}

dependencies {
    implementation "org.xerial:sqlite-jdbc:3.28.0"
    implementation "org.openjdk.jmh:jmh-core:1.21"
    implementation "org.openjdk.jmh:jmh-generator-bytecode:1.21"
    implementation "org.jooq:jool:0.9.14"
    annotationProcessor "org.openjdk.jmh:jmh-generator-annprocess:1.21"
}

jmhReport {
    jmhResultPath = project.file('build/reports/jmh/result.json')
    jmhReportOutput = project.file('build/reports/jmh')
}

task jmh(type: JavaExec, description: 'Executing JMH benchmarks') {

    classpath = sourceSets.main.runtimeClasspath
    main = 'org.openjdk.jmh.Main'

    def format = 'json';
    def resultFile = file("build/reports/jmh/result.${format}")
    if (!resultFile.parentFile.exists()) {
        assert resultFile.parentFile.mkdirs()
    }

    args 'Benchmark.*'
    args '-rf', format
    args '-rff', resultFile
}